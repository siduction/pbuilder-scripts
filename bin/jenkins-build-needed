#!/bin/bash
PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games

REPOSITORIES="base extra fixes lxqt" #kdenext
DISTRIBUTIONS="unstable next experimental"
ARCHS="amd64 i386 all"


## version
version() {
    . /usr/share/pbuilder-scripts/version
    echo "$(basename $0): ${VERSION}"
}

## get basic configuration form /etc/jenkins
if [ -f /etc/jenkins/jenkins-buildpackage.conf ]; then
#    echo -e "Configuration: /etc/jenkins/jenkins-buildpackage.conf used"
    . /etc/jenkins/jenkins-buildpackage.conf
fi

## get user conf
if [ -f ${HOME}/.config/jenkins/jenkins-buildpackage.conf ]; then
#    echo -e "Configuration: ${HOME}/.config/jenkins-buildpackage.conf  used"
    . ${HOME}/.config/jenkins/jenkins-builpackage.conf
fi

# really dirty - serverside base is defined fugly as can be for now
REPOBASE="/var/www/virtual/packages/${REPOSITORY}"
BUILDTARGET="/var/cache/pbuilder/${DISTRI}-${ARCH}/result"

## is_valid_line
is_valid_line() {
    [[ ! -e ${SOURCEPATH}/build-failed-${REPOSITORY}-${DISTRI}-${ARCH} ]] && touch ${SOURCEPATH}/build-failed-${REPOSITORY}-${DISTRI}-${ARCH}
    grep "$REPOLINE" ${SOURCEPATH}/build-failed-${REPOSITORY}-${DISTRI}-${ARCH} &>/dev/null
    RESULT=$?
    case ${RESULT} in
        1)
             if [ ! -f ${SOURCEPATH}/needed-${REPOSITORY}-${DISTRI}-${ARCH} ]; then
                 echo ${REPOLINE} > ${SOURCEPATH}/needed-${REPOSITORY}-${DISTRI}-${ARCH}
             fi
        ;;
    esac
    return ${RESULT}
}


## Main
[ ! -d ${SOURCEPATH} ] && mkdir -p ${SOURCEPATH} && echo ${SOURCEPATH}

for i in ${REPOSITORIES}; do
    for k in ${DISTRIBUTIONS}; do
        for l in ${ARCHS}; do
            REPOBASE="/var/www/virtual/packages/${i}"
            IFS=$'\n'
            for m in $(ssh ${USER}@${HOST}  "cd ${REPOBASE}; reprepro build-needing ${k}  ${l}"); do
                REPOLINE=$m
                REPOSITORY=${i}
                DISTRI=${k}
                ARCH=${l}
                is_valid_line
            done
            unset IFS
        done
    done
done
