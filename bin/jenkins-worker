#!/bin/bash
PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games

## usage
usage()
{
cat << EOF
jenkins-buildpackage
usage: $0 options


OPTIONS:
   -h      Show this message
   -r      Repository: base, fixes, extra, kdenext, lxqt, xfcenext
   -d      Distribution: unstable, next, experimental, sid
   -a      Architecture, should be 'i386' or 'amd64'
   -x      Delete file for failed builds
   -V      Version
EOF
}

## version
version() {
    . /usr/share/pbuilder-scripts/version
    echo "$(basename $0): ${VERSION}"
}

## get basic configuration form /etc/jenkins
if [ -f /etc/jenkins/jenkins-buildpackage.conf ]; then
#    echo -e "Configuration: /etc/jenkins/jenkins-buildpackage.conf used"
    . /etc/jenkins/jenkins-buildpackage.conf
fi

## get user conf
if [ -f ${HOME}/.config/jenkins/jenkins-buildpackage.conf ]; then
#    echo -e "Configuration: ${HOME}/.config/jenkins-buildpackage.conf  used"
    . ${HOME}/.config/jenkins/jenkins-builpackage.conf
fi


# really dirty - serverside base is defined fugly as can be for now
REPOBASE="/var/www/virtual/packages/${REPOSITORY}"
BUILDTARGET="/var/cache/pbuilder/${DISTRIBUTION}-${ARCH}/result"

## split_needs
split_needs() {
  ## which package
  LINE=$(cat ${i})
  PACKAGE=$(echo ${LINE} | awk -F' ' '{ print $1 }')
  VERSION=$(echo ${LINE} | awk -F' ' '{ print $2 }')
  REPOSITORY=$(echo ${i} | awk -F'-' '{ print $2 }')
  DISTRI=$(echo ${i} | awk -F'-' '{ print $3 }')
  ARCH=$(echo ${i} | awk -F'-' '{ print $4 }')
  echo -e "\n"
  echo -e "PACKAGE:      ${PACKAGE}"
  echo -e "VERSION:      ${VERSION}"
  echo -e "REPOSITORY:   ${REPOSITORY}"
  echo -e "DISTRIBUTION: ${DISTRIBUTION}"
  echo -e "ARCH:         ${ARCH}"
  echo -e "\n"
}

## Main
for i in ${SOURCEPATH}/needed* ; do
   if [ -f ${i} ]; then
       split_needs
       rm ${i}
       jenkins-buildpackage -r ${REPOSITORY} -d ${DISTRIBUTION} -a ${ARCH}
       RESULT=$?
       break
   fi
done
jenkins-build-needed
exit ${RESULT}
